# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  containers:
  - container: ubuntu18
    image: ubuntu:18.04
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

trigger:
- frc2019
- frc2020


jobs:
- job: "Primary"
  pool:
    vmImage: 'ubuntu-latest'

  timeoutInMinutes: 0

  container: ubuntu18

  steps:
    - script: |
        /tmp/docker exec -t -u 0 ci-container \
        sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
      displayName: Set up sudo
    - script: |
        sudo apt-get update -y
        sudo apt-get install cpio wget iputils-ping chrpath diffstat gawk texinfo build-essential python python3 libpulse-dev cmake locales git -y
        sudo locale-gen en_US.UTF-8
        sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
      displayName: Install Packages
    - script: |
        export LC_ALL=en_US.UTF-8
        export LANG=en_US.UTF-8
        export LANGUAGE=en_US.UTF-8
        MACHINE=xilinx-zynq DISTRO=nilrt THREADS=3 ./nibb.sh config
      displayName: Configure Setup
    - script: |
        export LC_ALL=en_US.UTF-8
        export LANG=en_US.UTF-8
        export LANGUAGE=en_US.UTF-8
        . env-nilrt-xilinx-zynq
        bitbake mono
      displayName: Build Mono
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'IPKs'
        targetPath: 'build/tmp_nilrt_3_0_xilinx-zynq-glibc/deploy'
